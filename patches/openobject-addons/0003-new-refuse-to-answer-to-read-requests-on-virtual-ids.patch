From 344598afbb6c1fa60a2208ac9a8725a0580b2362 Mon Sep 17 00:00:00 2001
From: Valentin Lab <valentin.lab@kalysto.org>
Date: Wed, 29 May 2013 20:21:01 +0200
Subject: [PATCH 3/7] new: refuse to answer to read requests on virtual ids
 that cannot be generated from the recurrence rule.

---
 base_calendar/base_calendar.py | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/base_calendar/base_calendar.py b/base_calendar/base_calendar.py
index 66cbc33..2ec2ae0 100644
--- a/base_calendar/base_calendar.py
+++ b/base_calendar/base_calendar.py
@@ -1595,7 +1595,8 @@ rule or repeating pattern of time to exclude from the recurring rule."),
             context = {}
         fields2 = fields and fields[:] or None
 
-        EXTRAFIELDS = ('class','user_id','duration')
+        EXTRAFIELDS = ('class','user_id','duration', 'date',
+            'rrule', 'vtimezone', 'exrule', 'exdate')
         for f in EXTRAFIELDS:
             if fields and (f not in fields):
                 fields2.append(f)
@@ -1618,6 +1619,15 @@ rule or repeating pattern of time to exclude from the recurring rule."),
             res = real_data[real_id].copy()
             ls = base_calendar_id2real_id(base_calendar_id, with_date=res and res.get('duration', 0) or 0)
             if not isinstance(ls, (str, int, long)) and len(ls) >= 2:
+                recurrent_dates = [
+                    d.strftime("%Y-%m-%d %H:%M:%S")
+                    for d in get_recurrent_dates(
+                        res['rrule'], res['date'], res['exdate'],
+                        res['vtimezone'], res['exrule'], context=context)]
+                if ls[1] not in recurrent_dates:
+                    raise KeyError(
+                        'Virtual id %r is not valid, event %r can '
+                        'not produce it.' % (base_calendar_id, real_id))
                 res['date'] = ls[1]
                 res['date_deadline'] = ls[2]
             res['id'] = base_calendar_id
-- 
1.9.2

